}
View(responseCoverage)
View(responseCoverageStore)
View(responseLayer)
# Creacion del espacio de trabajo Clima3Base
library('httr')
library('XML')
library('raster')
urlgeoserver <- "http://localhost:9002/geoserver/rest"
dir_productos <- paste(getwd(),'/Desktop/clima3/productos',sep="")
dir_productos_server <- "file:///home/geoserver/clima3/productos/"
workspace <- "clima3base"
# delete workspace
responseDeleteWorkspace <- DELETE(url=paste(urlgeoserver,'/workspaces/',workspace,'?recurse=true',sep=""),authenticate('admin','gis$developer'),content_type_xml())
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?><workspace>"
Body <- paste(Body,"<name>",workspace,"</name>","</workspace>",sep="")
responsePostWorkspace <- POST(url=paste(urlgeoserver,'/workspaces',sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
responseDeleteStyle <- DELETE(url=paste(urlgeoserver,'/styles/lluviaClima3','?recurse=true',sep=""),authenticate('admin','gis$developer'),content_type_xml())
# create style lluviaClima3
Body <- "<style>"
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"<filename>lluviaClima3.sld</filename>",sep="")
Body <- paste(Body,"</style>",sep="")
responseStyle <- POST(url=paste(urlgeoserver,'/styles',sep=""),accept('application/xml'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
sld <- upload_file(paste(getwd(),'/Desktop/clima3/lluviaClima3.sld',sep=""),type="application/vnd.ogc.sld+xml")
responseStyle <- PUT(url=paste(urlgeoserver,'/styles/lluviaClima3',sep=""),accept('application/vnd.ogc.sld+xml'),body=sld,authenticate('admin','gis$developer'),content_type('application/vnd.ogc.sld+xml'))
files <- list.files(path=dir_productos,recursive=TRUE,include.dirs=TRUE)
for(i in 1:length(files))
{
ext = substr(files[i],nchar(files[i])-2,nchar(files[i]))
if(ext=="tif"){
parts <- strsplit(files[i],"/")[[1]]
parts2 <- strsplit(parts[2],"[.]")[[1]]
folder <- parts[1]
name <- parts2[1]
description <- ""
storeurl <- paste(dir_productos_server,files[i],sep="")
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
Body <- paste(Body,"<coverageStore>",sep="")
Body <- paste(Body,"<name>",name,"</name>",sep="")
Body <- paste(Body,"<type>GeoTIFF</type>",sep="")
Body <- paste(Body,"<workspace>",workspace,"</workspace>",sep="")
Body <- paste(Body,"<url>",storeurl,"</url>",sep="")
Body <- paste(Body,"<enabled>true</enabled>",sep="")
Body <- paste(Body,"</coverageStore>",sep="")
responseCoverageStore <- POST(url=paste(urlgeoserver,'/workspaces/',workspace,"/coveragestores",sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
esteRaster <- raster(paste(dir_productos,"/",files[i],sep=""))
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
Body <- paste(Body,"<coverage>",sep="")
Body <- paste(Body,"<name>",name,"</name>",sep="")
Body <- paste(Body,"<title>",name,"</title>",sep="")
Body <- paste(Body,"<nativeCRS>",sep="")
Body <- paste(Body,"GEOGCS[\"WGS 84\", DATUM[\"World Geodetic System 1984\", SPHEROID[\"WGS 84\", 6378137.0, 298.257223563, AUTHORITY[\"EPSG\",\"7030\"]], AUTHORITY[\"EPSG\",\"6326\"]],",sep="")
Body <- paste(Body,"PRIMEM[\"Greenwich\", 0.0, AUTHORITY[\"EPSG\",\"8901\"]], UNIT[\"degree\", 0.017453292519943295], AXIS[\"Geodetic longitude\", EAST], AXIS[\"Geodetic latitude\", NORTH], AUTHORITY[\"EPSG\",\"4326\"]]",sep="")
Body <- paste(Body,"</nativeCRS>",sep="")
Body <- paste(Body,"<srs>EPSG:4326</srs>",sep="")
Body <- paste(Body,"<latLonBoundingBox>",sep="")
Body <- paste(Body,"<minx>",xmin(esteRaster),"</minx>",sep="")
Body <- paste(Body,"<maxx>",xmax(esteRaster),"</maxx>",sep="")
Body <- paste(Body,"<miny>",ymin(esteRaster),"</miny>",sep="")
Body <- paste(Body,"<maxy>",ymax(esteRaster),"</maxy>",sep="")
Body <- paste(Body,"<crs>EPSG:4326</crs>",sep="")
Body <- paste(Body,"</latLonBoundingBox>",sep="")
Body <- paste(Body,"<enabled>true</enabled>",sep="")
Body <- paste(Body,"<interpolationMethods>",sep="")
Body <- paste(Body,"<string>nearest neighbor</string>",sep="")
Body <- paste(Body,"<string>bilinear</string>",sep="")
Body <- paste(Body,"<string>bicubic</string>",sep="")
Body <- paste(Body,"</interpolationMethods>",sep="")
Body <- paste(Body,"</coverage>",sep="")
responseCoverage <- POST(url=paste(urlgeoserver,'/workspaces/',workspace,"/coveragestores/",name,"/coverages",sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
Body <- paste(Body,"<layer>",sep="")
Body <- paste(Body,"<defaultStyle>",sep="")
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"</defaultStyle>",sep="")
Body <- paste(Body,"<styles>",sep="")
Body <- paste(Body,"<style>",sep="")
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"</style>",sep="")
Body <- paste(Body,"</styles>",sep="")
Body <- paste(Body,"<defaultInterpolation>bilinear</defaultInterpolation>",sep="")
Body <- paste(Body,"</layer>",sep="")
responseLayer <- PUT(url=paste(urlgeoserver,'/layers/',name,sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
break
}
}
View(responseCoverage)
View(responseLayer)
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
Body <- paste(Body,"<layer>",sep="")
Body <- paste(Body,"<defaultStyle>",sep="")
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"</defaultStyle>",sep="")
Body <- paste(Body,"<styles>",sep="")
Body <- paste(Body,"<style>",sep="")
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"</style>",sep="")
Body <- paste(Body,"</styles>",sep="")
Body <- paste(Body,"<interpolation>bilinear</interpolation>",sep="")
Body <- paste(Body,"</layer>",sep="")
responseLayer <- PUT(url=paste(urlgeoserver,'/layers/',name,sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
View(responseLayer)
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
Body <- paste(Body,"<layer>",sep="")
Body <- paste(Body,"<defaultStyle>",sep="")
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"</defaultStyle>",sep="")
Body <- paste(Body,"<styles>",sep="")
Body <- paste(Body,"<style>",sep="")
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"</style>",sep="")
Body <- paste(Body,"</styles>",sep="")
Body <- paste(Body,"<defaultInterpolationMethd>bilinear</defaultInterpolationMethod>",sep="")
Body <- paste(Body,"</layer>",sep="")
responseLayer <- PUT(url=paste(urlgeoserver,'/layers/',name,sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
View(responseLayer)
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
Body <- paste(Body,"<layer>",sep="")
Body <- paste(Body,"<defaultStyle>",sep="")
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"</defaultStyle>",sep="")
Body <- paste(Body,"<styles>",sep="")
Body <- paste(Body,"<style>",sep="")
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"</style>",sep="")
Body <- paste(Body,"</styles>",sep="")
Body <- paste(Body,"<defaultInterpolationMethod>bilinear</defaultInterpolationMethod>",sep="")
Body <- paste(Body,"</layer>",sep="")
responseLayer <- PUT(url=paste(urlgeoserver,'/layers/',name,sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
View(responseLayer)
# Creacion del espacio de trabajo Clima3Base
library('httr')
library('XML')
library('raster')
urlgeoserver <- "http://localhost:9002/geoserver/rest"
dir_productos <- paste(getwd(),'/Desktop/clima3/productos',sep="")
dir_productos_server <- "file:///home/geoserver/clima3/productos/"
workspace <- "clima3base"
# delete workspace
responseDeleteWorkspace <- DELETE(url=paste(urlgeoserver,'/workspaces/',workspace,'?recurse=true',sep=""),authenticate('admin','gis$developer'),content_type_xml())
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?><workspace>"
Body <- paste(Body,"<name>",workspace,"</name>","</workspace>",sep="")
responsePostWorkspace <- POST(url=paste(urlgeoserver,'/workspaces',sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
responseDeleteStyle <- DELETE(url=paste(urlgeoserver,'/styles/lluviaClima3','?recurse=true',sep=""),authenticate('admin','gis$developer'),content_type_xml())
# create style lluviaClima3
Body <- "<style>"
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"<filename>lluviaClima3.sld</filename>",sep="")
Body <- paste(Body,"</style>",sep="")
responseStyle <- POST(url=paste(urlgeoserver,'/styles',sep=""),accept('application/xml'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
sld <- upload_file(paste(getwd(),'/Desktop/clima3/lluviaClima3.sld',sep=""),type="application/vnd.ogc.sld+xml")
responseStyle <- PUT(url=paste(urlgeoserver,'/styles/lluviaClima3',sep=""),accept('application/vnd.ogc.sld+xml'),body=sld,authenticate('admin','gis$developer'),content_type('application/vnd.ogc.sld+xml'))
files <- list.files(path=dir_productos,recursive=TRUE,include.dirs=TRUE)
for(i in 1:length(files))
{
ext = substr(files[i],nchar(files[i])-2,nchar(files[i]))
if(ext=="tif"){
parts <- strsplit(files[i],"/")[[1]]
parts2 <- strsplit(parts[2],"[.]")[[1]]
folder <- parts[1]
name <- parts2[1]
description <- ""
storeurl <- paste(dir_productos_server,files[i],sep="")
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
Body <- paste(Body,"<coverageStore>",sep="")
Body <- paste(Body,"<name>",name,"</name>",sep="")
Body <- paste(Body,"<type>GeoTIFF</type>",sep="")
Body <- paste(Body,"<workspace>",workspace,"</workspace>",sep="")
Body <- paste(Body,"<url>",storeurl,"</url>",sep="")
Body <- paste(Body,"<enabled>true</enabled>",sep="")
Body <- paste(Body,"</coverageStore>",sep="")
responseCoverageStore <- POST(url=paste(urlgeoserver,'/workspaces/',workspace,"/coveragestores",sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
esteRaster <- raster(paste(dir_productos,"/",files[i],sep=""))
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
Body <- paste(Body,"<coverage>",sep="")
Body <- paste(Body,"<name>",name,"</name>",sep="")
Body <- paste(Body,"<title>",name,"</title>",sep="")
Body <- paste(Body,"<nativeCRS>",sep="")
Body <- paste(Body,"GEOGCS[\"WGS 84\", DATUM[\"World Geodetic System 1984\", SPHEROID[\"WGS 84\", 6378137.0, 298.257223563, AUTHORITY[\"EPSG\",\"7030\"]], AUTHORITY[\"EPSG\",\"6326\"]],",sep="")
Body <- paste(Body,"PRIMEM[\"Greenwich\", 0.0, AUTHORITY[\"EPSG\",\"8901\"]], UNIT[\"degree\", 0.017453292519943295], AXIS[\"Geodetic longitude\", EAST], AXIS[\"Geodetic latitude\", NORTH], AUTHORITY[\"EPSG\",\"4326\"]]",sep="")
Body <- paste(Body,"</nativeCRS>",sep="")
Body <- paste(Body,"<srs>EPSG:4326</srs>",sep="")
Body <- paste(Body,"<latLonBoundingBox>",sep="")
Body <- paste(Body,"<minx>",xmin(esteRaster),"</minx>",sep="")
Body <- paste(Body,"<maxx>",xmax(esteRaster),"</maxx>",sep="")
Body <- paste(Body,"<miny>",ymin(esteRaster),"</miny>",sep="")
Body <- paste(Body,"<maxy>",ymax(esteRaster),"</maxy>",sep="")
Body <- paste(Body,"<crs>EPSG:4326</crs>",sep="")
Body <- paste(Body,"</latLonBoundingBox>",sep="")
Body <- paste(Body,"<enabled>true</enabled>",sep="")
Body <- paste(Body,"<interpolationMethods>",sep="")
Body <- paste(Body,"<string>nearest neighbor</string>",sep="")
Body <- paste(Body,"<string>bilinear</string>",sep="")
Body <- paste(Body,"<string>bicubic</string>",sep="")
Body <- paste(Body,"</interpolationMethods>",sep="")
Body <- paste(Body,"<defaultInterpolationMethod>bilinear</defaultInterpolationMethod>",sep="")
Body <- paste(Body,"</coverage>",sep="")
responseCoverage <- POST(url=paste(urlgeoserver,'/workspaces/',workspace,"/coveragestores/",name,"/coverages",sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
Body <- paste(Body,"<layer>",sep="")
Body <- paste(Body,"<defaultStyle>",sep="")
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"</defaultStyle>",sep="")
Body <- paste(Body,"<styles>",sep="")
Body <- paste(Body,"<style>",sep="")
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"</style>",sep="")
Body <- paste(Body,"</styles>",sep="")
Body <- paste(Body,"</layer>",sep="")
responseLayer <- PUT(url=paste(urlgeoserver,'/layers/',name,sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
break
}
}
View(responseCoverage)
View(responseLayer)
install.packages("RPostgreSQL")
# Creacion del espacio de trabajo Clima3Base
library('httr')
library('XML')
library('raster')
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host="localhost", port="9001", dbname="clima3db", user="emartinez", password="gis$developer")
urlgeoserver <- "http://localhost:9002/geoserver/rest"
dir_productos <- paste(getwd(),'/Desktop/clima3/productos',sep="")
dir_productos_server <- "file:///home/geoserver/clima3/productos/"
workspace <- "clima3base"
# delete workspace
responseDeleteWorkspace <- DELETE(url=paste(urlgeoserver,'/workspaces/',workspace,'?recurse=true',sep=""),authenticate('admin','gis$developer'),content_type_xml())
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?><workspace>"
Body <- paste(Body,"<name>",workspace,"</name>","</workspace>",sep="")
responsePostWorkspace <- POST(url=paste(urlgeoserver,'/workspaces',sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
responseDeleteStyle <- DELETE(url=paste(urlgeoserver,'/styles/lluviaClima3','?recurse=true',sep=""),authenticate('admin','gis$developer'),content_type_xml())
# create style lluviaClima3
Body <- "<style>"
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"<filename>lluviaClima3.sld</filename>",sep="")
Body <- paste(Body,"</style>",sep="")
responseStyle <- POST(url=paste(urlgeoserver,'/styles',sep=""),accept('application/xml'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
sld <- upload_file(paste(getwd(),'/Desktop/clima3/lluviaClima3.sld',sep=""),type="application/vnd.ogc.sld+xml")
responseStyle <- PUT(url=paste(urlgeoserver,'/styles/lluviaClima3',sep=""),accept('application/vnd.ogc.sld+xml'),body=sld,authenticate('admin','gis$developer'),content_type('application/vnd.ogc.sld+xml'))
files <- list.files(path=dir_productos,recursive=TRUE,include.dirs=TRUE)
for(i in 1:length(files))
{
ext = substr(files[i],nchar(files[i])-2,nchar(files[i]))
if(ext=="tif"){
parts <- strsplit(files[i],"/")[[1]]
parts2 <- strsplit(parts[2],"[.]")[[1]]
folder <- parts[1]
name <- parts2[1]
description <- ""
storeurl <- paste(dir_productos_server,files[i],sep="")
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
Body <- paste(Body,"<coverageStore>",sep="")
Body <- paste(Body,"<name>",name,"</name>",sep="")
Body <- paste(Body,"<type>GeoTIFF</type>",sep="")
Body <- paste(Body,"<workspace>",workspace,"</workspace>",sep="")
Body <- paste(Body,"<url>",storeurl,"</url>",sep="")
Body <- paste(Body,"<enabled>true</enabled>",sep="")
Body <- paste(Body,"</coverageStore>",sep="")
responseCoverageStore <- POST(url=paste(urlgeoserver,'/workspaces/',workspace,"/coveragestores",sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
esteRaster <- raster(paste(dir_productos,"/",files[i],sep=""))
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
Body <- paste(Body,"<coverage>",sep="")
Body <- paste(Body,"<name>",name,"</name>",sep="")
Body <- paste(Body,"<title>",name,"</title>",sep="")
Body <- paste(Body,"<nativeCRS>",sep="")
Body <- paste(Body,"GEOGCS[\"WGS 84\", DATUM[\"World Geodetic System 1984\", SPHEROID[\"WGS 84\", 6378137.0, 298.257223563, AUTHORITY[\"EPSG\",\"7030\"]], AUTHORITY[\"EPSG\",\"6326\"]],",sep="")
Body <- paste(Body,"PRIMEM[\"Greenwich\", 0.0, AUTHORITY[\"EPSG\",\"8901\"]], UNIT[\"degree\", 0.017453292519943295], AXIS[\"Geodetic longitude\", EAST], AXIS[\"Geodetic latitude\", NORTH], AUTHORITY[\"EPSG\",\"4326\"]]",sep="")
Body <- paste(Body,"</nativeCRS>",sep="")
Body <- paste(Body,"<srs>EPSG:4326</srs>",sep="")
Body <- paste(Body,"<latLonBoundingBox>",sep="")
Body <- paste(Body,"<minx>",xmin(esteRaster),"</minx>",sep="")
Body <- paste(Body,"<maxx>",xmax(esteRaster),"</maxx>",sep="")
Body <- paste(Body,"<miny>",ymin(esteRaster),"</miny>",sep="")
Body <- paste(Body,"<maxy>",ymax(esteRaster),"</maxy>",sep="")
Body <- paste(Body,"<crs>EPSG:4326</crs>",sep="")
Body <- paste(Body,"</latLonBoundingBox>",sep="")
Body <- paste(Body,"<enabled>true</enabled>",sep="")
Body <- paste(Body,"<interpolationMethods>",sep="")
Body <- paste(Body,"<string>nearest neighbor</string>",sep="")
Body <- paste(Body,"<string>bilinear</string>",sep="")
Body <- paste(Body,"<string>bicubic</string>",sep="")
Body <- paste(Body,"</interpolationMethods>",sep="")
Body <- paste(Body,"<defaultInterpolationMethod>bilinear</defaultInterpolationMethod>",sep="")
Body <- paste(Body,"</coverage>",sep="")
responseCoverage <- POST(url=paste(urlgeoserver,'/workspaces/',workspace,"/coveragestores/",name,"/coverages",sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
Body <- "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
Body <- paste(Body,"<layer>",sep="")
Body <- paste(Body,"<defaultStyle>",sep="")
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"</defaultStyle>",sep="")
Body <- paste(Body,"<styles>",sep="")
Body <- paste(Body,"<style>",sep="")
Body <- paste(Body,"<name>lluviaClima3</name>",sep="")
Body <- paste(Body,"</style>",sep="")
Body <- paste(Body,"</styles>",sep="")
Body <- paste(Body,"</layer>",sep="")
responseLayer <- PUT(url=paste(urlgeoserver,'/layers/',name,sep=""),accept('text/html'),body=Body,authenticate('admin','gis$developer'),content_type_xml())
# insert into database layer index
sql <- "insert into clima3_layer_index (layerclass,layergroup,layername,filepath,createdate) "
sql <- paste(sql,"values('linea_base','",folder,"','",workspace,":",name,"','",storeurl,"',now())",sep="")
rs <- dbSendQuery(con,sql)
}
}
source('~/Desktop/clima3/PublicarBase.R')
getwd()
current_month <- month(Sys.Date())
install.packages("lubridate")
library(lubridate)
current_month <- month(Sys.Date())
library('httr')
library('XML')
library('raster')
library(RPostgreSQL)
library(rgdal)
library(lubridate)
processDir <- paste(getwd(),"/Desktop/clima3/procesamiento/",sep="")
desviacionesDir <- paste(getwd(),"/Desktop/clima3/productos/DESVIACIONES_CHIRPS_PROMEDIO/",sep="")
procesar <- c('m1_mes1','m1_mes2','m1_mes3','m2_mes1','m3_mes1','m4_mes1')
i <- 1
download.file(url = "", destfile = paste(processDir,procesar[i],"_","acumulado_general.tif",sep=""))
urlsalidas <- "http://centroclima.org/samre3/salidas/"
i <- 1
download.file(url = paste(urlsalidas,procesar[i],"/acum_general.tif",sep=""), destfile = paste(processDir,procesar[i],"_","acumulado_general.tif",sep=""))
current_month <- month(Sys.Date())
avgdev_month <- current_month + 1
if(i==2)
{
avgdev_month <- current_month + 2
}
if(i==3)
{
avgdev_month <- current_month + 3
}
process_month <- paste("0",as.character(avgdev_month),sep="")
process_month <- substr(process_month, nchar(process_month)-1, nchar(process_month))
lluvia_acumulada <- raster(paste(processDir,procesar[i],"_","acumulado_general.tif",sep=""))
raster_desviacion_promedio <- raster(paste(desviacionesDir,process_month,".tif",sep=""))
lluvia_acumulada
raster_desviacion_promedio
library('httr')
library('XML')
library('raster')
library(RPostgreSQL)
library(rgdal)
library(lubridate)
processDir <- paste(getwd(),"/Desktop/clima3/procesamiento/",sep="")
desviacionesDir <- paste(getwd(),"/Desktop/clima3/productos/DESVIACIONES_CHIRPS_PROMEDIO/",sep="")
procesar <- c('m1_mes1','m1_mes2','m1_mes3','m2_mes1','m3_mes1','m4_mes1')
urlsalidas <- "http://centroclima.org/samre3/salidas/"
i <- 1
download.file(url = paste(urlsalidas,procesar[i],"/acum_general.tif",sep=""), destfile = paste(processDir,procesar[i],"_","acumulado_general.tif",sep=""))
current_month <- month(Sys.Date())
avgdev_month <- current_month + 1
if(i==2)
{
avgdev_month <- current_month + 2
}
if(i==3)
{
avgdev_month <- current_month + 3
}
process_month <- paste("0",as.character(avgdev_month),sep="")
process_month <- substr(process_month, nchar(process_month)-1, nchar(process_month))
lluvia_acumulada <- raster(paste(processDir,procesar[i],"_","acumulado_general.tif",sep=""))
crs(lluvia_acumulada) <- "+proj=longlat +datum=WGS84 +pm=360dw"
lluvia_acumulada <- projectRaster(lluvia_acumulada, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
lluvia_acumulada
raster_desviacion_promedio <- raster(paste(desviacionesDir,process_month,".tif",sep=""))
lluvia_acumulada <- crop(lluvia_acumulada,extent(raster_desviacion_promedio))
raster_desviacion_promedio
raster_desviacion_promedio <- raster(paste(desviacionesDir,process_month,".tif",sep=""))
crs(raster_desviacion_promedio) <- "+proj=longlat +datum=WGS84 +pm=360dw"
raster_desviacion_promedio <- projectRaster(raster_desviacion_promedio, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
lluvia_acumulada <- crop(lluvia_acumulada,extent(raster_desviacion_promedio))
lluvia_acumulada <- mask(lluvia_acumulada,raster_desviacion_promedio)
lluvia_acumulada
raster_desviacion_promedio
plot(lluvia_acumulada)
plot(raster_desviacion_promedio,add=TRUE)
plot(lluvia_acumulada)
plot(raster_desviacion_promedio,add=TRUE)
library('httr')
library('XML')
library('raster')
library(RPostgreSQL)
library(rgdal)
library(lubridate)
processDir <- paste(getwd(),"/Desktop/clima3/procesamiento/",sep="")
desviacionesDir <- paste(getwd(),"/Desktop/clima3/productos/DESVIACIONES_CHIRPS_PROMEDIO/",sep="")
procesar <- c('m1_mes1','m1_mes2','m1_mes3','m2_mes1','m3_mes1','m4_mes1')
urlsalidas <- "http://centroclima.org/samre3/salidas/"
i <- 1
download.file(url = paste(urlsalidas,procesar[i],"/acum_general.tif",sep=""), destfile = paste(processDir,procesar[i],"_","acumulado_general.tif",sep=""))
current_month <- month(Sys.Date())
avgdev_month <- current_month + 1
if(i==2)
{
avgdev_month <- current_month + 2
}
if(i==3)
{
avgdev_month <- current_month + 3
}
process_month <- paste("0",as.character(avgdev_month),sep="")
process_month <- substr(process_month, nchar(process_month)-1, nchar(process_month))
lluvia_acumulada <- raster(paste(processDir,procesar[i],"_","acumulado_general.tif",sep=""))
crs(lluvia_acumulada) <- "+proj=longlat +datum=WGS84 +pm=360dw"
lluvia_acumulada <- projectRaster(lluvia_acumulada, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
raster_desviacion_promedio <- raster(paste(desviacionesDir,process_month,".tif",sep=""))
crs(raster_desviacion_promedio) <- "+proj=longlat +datum=WGS84 +pm=360dw"
raster_desviacion_promedio <- projectRaster(raster_desviacion_promedio, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
lluvia_acumulada
raster_desviacion_promedio
plot(lluvia_acumulada)
plot(raster_desviacion_promedio,add=TRUE)
lluvia_acumulada <- mask(lluvia_acumulada,raster_desviacion_promedio)
lluvia_acumulada <- resample(lluvia_acumulada,raster_desviacion_promedio,method='bilinear')
lluvia_acumulada
plot(lluvia_acumulada)
plot(raster_desviacion_promedio,add=TRUE)
lluvia_acumulada <- mask(lluvia_acumulada,raster_desviacion_promedio)
plot(lluvia_acumulada)
plot(raster_desviacion_promedio)
r <- if(TRUE) 1 else 2
r
raster_normalizado <- if(raster_desviacion_promedio>0) (lluvia_acumulada - raster_desviacion_promedio) else (lluvia_acumulada + raster_desviacion_promedio)
raster_desviacion_promedio > 0
rs <- lluvia_acumulada - raster_desviacion_promedio[raster_desviacion_promedio > 0]
rs <- lluvia_acumulada - raster_desviacion_promedio > 0
rs
plot(rs)
id_positivos <- raster_desviacion_promedio > 0
id_negativos <- raster_desviacion_promedio < 0
plot(id_positivos)
plot(id_negativos)
lluvia_acumulada_ajustado <- lluvia_acumulada
lluvia_acumulada_ajustado <- lluvia_acumulada[id_positivos] - raster_desviacion_promedio[id_positivos]
lluvia_acumulada_ajustado <- lluvia_acumulada[id_negativos] + raster_desviacion_promedio[id_negativos]
plot(lluvia_acumulada_ajustado)
lluvia_acumulada_ajustado
rs <- raster(lluvia_acumulada_ajustado)
lluvia_acumulada_ajustado <- ifelse(raster_desviacion_promedio>o,lluvia_acumulada - raster_desviacion_promedio, lluvia_acumulada + raster_desviacion_promedio)
lluvia_acumulada_ajustado <- ifelse(raster_desviacion_promedio>0,lluvia_acumulada - raster_desviacion_promedio, lluvia_acumulada + raster_desviacion_promedio)
lluvia_acumulada_ajustado <- lluvia_acumulada
lluvia_acumulada_ajustado[raster_desviacion_promedio>0] = lluvia_acumulada - raster_desviacion_promedio
lluvia_acumulada_ajustado[raster_desviacion_promedio>0] = lluvia_acumulada[raster_desviacion_promedio>0] - raster_desviacion_promedio[raster_desviacion_promedio>0]
lluvia_acumulada_ajustado
plot(lluvia_acumulada_ajustado)
lluvia_acumulada_ajustado[!raster_desviacion_promedio>0] = lluvia_acumulada[!raster_desviacion_promedio>0] + raster_desviacion_promedio[!raster_desviacion_promedio>0]
plot(lluvia_acumulada_ajustado)
lluvia_acumulada_ajustado
lluvia_acumulada_ajustado[lluvia_acumulada_ajustado<0]=lluvia_acumulada[lluvia_acumulada_ajustado<0]
lluvia_acumulada_ajustado
plot(lluvia_acumulada_ajustado)
plot(lluvia_acumulada_ajustado)
writeFormats()
writeRaster(lluvia_acumulada_ajustado,paste(processDir,procesar[i],'_acu_gen_norm.tif',sep=""),'GTiff')
urlgeoserver <- "http://localhost:9002/geoserver/rest"
processDir <- paste(getwd(),"/Desktop/clima3/procesamiento/",sep="")
desviacionesDir <- paste(getwd(),"/Desktop/clima3/productos/DESVIACIONES_CHIRPS_PROMEDIO/",sep="")
procesar <- c('m1_mes1','m1_mes2','m1_mes3','m2_mes1','m3_mes1','m4_mes1')
urlsalidas <- "http://centroclima.org/samre3/salidas/"
workspace <- "c3pronostico"
# delete workspace
responseGetWorkspace <- GET(url=paste(urlgeoserver,'/workspaces',sep=""),authenticate('admin','gis$developer'),content_type_json())
responseGetWorkspace
View(responseGetWorkspace)
responseGetWorkspace[["content"]]
str(content(responseGetWorkspace))
content(responseGetWorkspace)
responseGetWorkspace
responseGetWorkspace$content
responseGetWorkspace$content
str(responseGetWorkspace$content)
content(responseGetWorkspace$content)
content(responseGetWorkspace)
c <- content(responseGetWorkspace)
c
c$workspaces$workspace
summary(c$workspaces$workspace)
content(responseGetWorkspace,"text")
source('~/Desktop/clima3/PublicarBase.R')
source('~/Desktop/clima3/PublicarBase.R')
# Procesamiento de rasters geotiff provenientes del modelo WRF
# Proposito: Extraccion de valores de lluvia para puntos especificos
# Elaborado por Ing. David Eliseo Martinez Castellanos el 11 de Junio 2018
library(raster)
library(rgdal)
setwd('/Users/emartinez/Desktop/Hidroclima/lluvia/')
tmp = tempfile(fileext=".tif")
download.file(url = "http://srt.marn.gob.sv/salidaswrf/wrf_regional_norteca_5km/12/geotiff/lluvia_24h.tif",destfile = "lluvia.tif")
lluvia <- raster('lluvia.tif')
crs(lluvia) <- "+proj=longlat +datum=WGS84 +pm=360dw"
lluvia_projected <- projectRaster(lluvia,crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
clipping_rectangle <- readOGR("clipping_rectangle.shp")
lluvia_clipped <- crop(lluvia_projected,extent(clipping_rectangle))
cuenca <- readOGR("grande_sonsonatewgs84.shp")
lluvia_resampled <- disaggregate(lluvia_clipped,fact=6,method='bilinear')
estaciones_pronostico <- readOGR('estaciones_pronostico.shp')
lluvia_estaciones <- extract(lluvia_resampled,coordinates(estaciones_pronostico)[,1:2],method='bilinear')
lluvia_estaciones
#sink(file="/Users/emartinez/Desktop/Hidroclima/lluvia/lluvias24h.txt",split=FALSE)
lines <- []
#sink(file="/Users/emartinez/Desktop/Hidroclima/lluvia/lluvias24h.txt",split=FALSE)
lines <- c(paste("1, Apaneca, 13.859167, -89.804444,",lluvia_estaciones[1],sep=""))
lines <- c(lines,paste("2, Buena Vista, 13.893333, -89.769722,",lluvia_estaciones[2],sep=""))
lines
source('~/Desktop/Hidroclima/lluvia/getLluvia.R')
source('~/Desktop/Hidroclima/lluvia/getLluvia.R')
