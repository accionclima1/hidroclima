process_month <- paste("0",as.character(avgdev_month),sep="")
process_month <- substr(process_month, nchar(process_month)-1, nchar(process_month))
lluvia_acumulada <- raster(paste(processDir,procesar[i],"_","acumulado_general.tif",sep=""))
crs(lluvia_acumulada) <- "+proj=longlat +datum=WGS84 +pm=360dw"
lluvia_acumulada <- projectRaster(lluvia_acumulada, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
lluvia_acumulada
raster_desviacion_promedio <- raster(paste(desviacionesDir,process_month,".tif",sep=""))
lluvia_acumulada <- crop(lluvia_acumulada,extent(raster_desviacion_promedio))
raster_desviacion_promedio
raster_desviacion_promedio <- raster(paste(desviacionesDir,process_month,".tif",sep=""))
crs(raster_desviacion_promedio) <- "+proj=longlat +datum=WGS84 +pm=360dw"
raster_desviacion_promedio <- projectRaster(raster_desviacion_promedio, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
lluvia_acumulada <- crop(lluvia_acumulada,extent(raster_desviacion_promedio))
lluvia_acumulada <- mask(lluvia_acumulada,raster_desviacion_promedio)
lluvia_acumulada
raster_desviacion_promedio
plot(lluvia_acumulada)
plot(raster_desviacion_promedio,add=TRUE)
plot(lluvia_acumulada)
plot(raster_desviacion_promedio,add=TRUE)
library('httr')
library('XML')
library('raster')
library(RPostgreSQL)
library(rgdal)
library(lubridate)
processDir <- paste(getwd(),"/Desktop/clima3/procesamiento/",sep="")
desviacionesDir <- paste(getwd(),"/Desktop/clima3/productos/DESVIACIONES_CHIRPS_PROMEDIO/",sep="")
procesar <- c('m1_mes1','m1_mes2','m1_mes3','m2_mes1','m3_mes1','m4_mes1')
urlsalidas <- "http://centroclima.org/samre3/salidas/"
i <- 1
download.file(url = paste(urlsalidas,procesar[i],"/acum_general.tif",sep=""), destfile = paste(processDir,procesar[i],"_","acumulado_general.tif",sep=""))
current_month <- month(Sys.Date())
avgdev_month <- current_month + 1
if(i==2)
{
avgdev_month <- current_month + 2
}
if(i==3)
{
avgdev_month <- current_month + 3
}
process_month <- paste("0",as.character(avgdev_month),sep="")
process_month <- substr(process_month, nchar(process_month)-1, nchar(process_month))
lluvia_acumulada <- raster(paste(processDir,procesar[i],"_","acumulado_general.tif",sep=""))
crs(lluvia_acumulada) <- "+proj=longlat +datum=WGS84 +pm=360dw"
lluvia_acumulada <- projectRaster(lluvia_acumulada, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
raster_desviacion_promedio <- raster(paste(desviacionesDir,process_month,".tif",sep=""))
crs(raster_desviacion_promedio) <- "+proj=longlat +datum=WGS84 +pm=360dw"
raster_desviacion_promedio <- projectRaster(raster_desviacion_promedio, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
lluvia_acumulada
raster_desviacion_promedio
plot(lluvia_acumulada)
plot(raster_desviacion_promedio,add=TRUE)
lluvia_acumulada <- mask(lluvia_acumulada,raster_desviacion_promedio)
lluvia_acumulada <- resample(lluvia_acumulada,raster_desviacion_promedio,method='bilinear')
lluvia_acumulada
plot(lluvia_acumulada)
plot(raster_desviacion_promedio,add=TRUE)
lluvia_acumulada <- mask(lluvia_acumulada,raster_desviacion_promedio)
plot(lluvia_acumulada)
plot(raster_desviacion_promedio)
r <- if(TRUE) 1 else 2
r
raster_normalizado <- if(raster_desviacion_promedio>0) (lluvia_acumulada - raster_desviacion_promedio) else (lluvia_acumulada + raster_desviacion_promedio)
raster_desviacion_promedio > 0
rs <- lluvia_acumulada - raster_desviacion_promedio[raster_desviacion_promedio > 0]
rs <- lluvia_acumulada - raster_desviacion_promedio > 0
rs
plot(rs)
id_positivos <- raster_desviacion_promedio > 0
id_negativos <- raster_desviacion_promedio < 0
plot(id_positivos)
plot(id_negativos)
lluvia_acumulada_ajustado <- lluvia_acumulada
lluvia_acumulada_ajustado <- lluvia_acumulada[id_positivos] - raster_desviacion_promedio[id_positivos]
lluvia_acumulada_ajustado <- lluvia_acumulada[id_negativos] + raster_desviacion_promedio[id_negativos]
plot(lluvia_acumulada_ajustado)
lluvia_acumulada_ajustado
rs <- raster(lluvia_acumulada_ajustado)
lluvia_acumulada_ajustado <- ifelse(raster_desviacion_promedio>o,lluvia_acumulada - raster_desviacion_promedio, lluvia_acumulada + raster_desviacion_promedio)
lluvia_acumulada_ajustado <- ifelse(raster_desviacion_promedio>0,lluvia_acumulada - raster_desviacion_promedio, lluvia_acumulada + raster_desviacion_promedio)
lluvia_acumulada_ajustado <- lluvia_acumulada
lluvia_acumulada_ajustado[raster_desviacion_promedio>0] = lluvia_acumulada - raster_desviacion_promedio
lluvia_acumulada_ajustado[raster_desviacion_promedio>0] = lluvia_acumulada[raster_desviacion_promedio>0] - raster_desviacion_promedio[raster_desviacion_promedio>0]
lluvia_acumulada_ajustado
plot(lluvia_acumulada_ajustado)
lluvia_acumulada_ajustado[!raster_desviacion_promedio>0] = lluvia_acumulada[!raster_desviacion_promedio>0] + raster_desviacion_promedio[!raster_desviacion_promedio>0]
plot(lluvia_acumulada_ajustado)
lluvia_acumulada_ajustado
lluvia_acumulada_ajustado[lluvia_acumulada_ajustado<0]=lluvia_acumulada[lluvia_acumulada_ajustado<0]
lluvia_acumulada_ajustado
plot(lluvia_acumulada_ajustado)
plot(lluvia_acumulada_ajustado)
writeFormats()
writeRaster(lluvia_acumulada_ajustado,paste(processDir,procesar[i],'_acu_gen_norm.tif',sep=""),'GTiff')
urlgeoserver <- "http://localhost:9002/geoserver/rest"
processDir <- paste(getwd(),"/Desktop/clima3/procesamiento/",sep="")
desviacionesDir <- paste(getwd(),"/Desktop/clima3/productos/DESVIACIONES_CHIRPS_PROMEDIO/",sep="")
procesar <- c('m1_mes1','m1_mes2','m1_mes3','m2_mes1','m3_mes1','m4_mes1')
urlsalidas <- "http://centroclima.org/samre3/salidas/"
workspace <- "c3pronostico"
# delete workspace
responseGetWorkspace <- GET(url=paste(urlgeoserver,'/workspaces',sep=""),authenticate('admin','gis$developer'),content_type_json())
responseGetWorkspace
View(responseGetWorkspace)
responseGetWorkspace[["content"]]
str(content(responseGetWorkspace))
content(responseGetWorkspace)
responseGetWorkspace
responseGetWorkspace$content
responseGetWorkspace$content
str(responseGetWorkspace$content)
content(responseGetWorkspace$content)
content(responseGetWorkspace)
c <- content(responseGetWorkspace)
c
c$workspaces$workspace
summary(c$workspaces$workspace)
content(responseGetWorkspace,"text")
source('~/Desktop/clima3/PublicarBase.R')
source('~/Desktop/clima3/PublicarBase.R')
install.packages("shinydashboard")
install.packages("shinydashboardPlus")
shiny::runApp('Desktop/Hidroclima/dashboard_bdcac')
install.packages("leaflet")
?dashboardHeader
runApp('Desktop/Hidroclima/dashboard_bdcac')
?icon
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
?dashboardSidebar
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
?dashboardHeader
runApp('Desktop/Hidroclima/dashboard_bdcac')
?titlePanel
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
?dashboardPage
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
install.packages("shiny")
shiny::runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
?selectizeInput
runApp('Desktop/Hidroclima/dashboard_bdcac')
?leafletOptions
zoomControl
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
?actionButton
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
aes
install.packages("ggplot2")
library(ggplot2)
load(url("http://s3.amazonaws.com/assets.datacamp.com/production/course_4850/datasets/movies.Rdata"))
movies
runApp('Desktop/Hidroclima/dashboard_bdcac')
runApp('Desktop/Hidroclima/dashboard_bdcac')
source('~/getBDCACdata.R')
install.packages("postGIStools")
source('~/getBDCACdata.R')
source('~/getBDCACdata.R')
lluvia_anual_estacion
summary(lluvia_anual_estacion)
estaciones
choices <- list()
choices
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?selectInput
install.packages("dplyr")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
estaciones
distinct(estaciones$insnombre)
distinct(paste(estaciones$inscodigo,"-",estaciones$insnombre,sep='')
)
paste(estaciones$inscodigo,"-",estaciones$insnombre,sep='')
instituciones = paste(estaciones$inscodigo,"-",estaciones$insnombre,sep='')
instituciones
distinct(instituciones)
class(instituciones)
class(instituciones)
data.frame(instituciones)
distinct(data.frame(instituciones))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
distinct(data.frame(paste(estaciones$inspais, ' - ', estaciones$insnombre,sep="")))
dplyr::filter(estaciones,estaciones$insnombre==substr('BLZ - National Meteorological Service',1,3))
runApp()
filter(estaciones,estaciones$insnombre==substr(input$instituciones,1,3))
filter(estaciones,estaciones$insnombre==substr('BLZ -',1,3))
filter(estaciones,insnombre==substr('BLZ -',1,3))
estaciones %>% filter(insnombre==substr('BLZ -'))
estaciones %>% filter(insnombre==substr('BLZ -',1,3))
View(estaciones)
estaciones %>% filter(inspais=='BLZ')
View(estaciones)
(estaciones %>% filter(inspais=='BLZ'))$estnombre
runApp()
runApp()
runApp()
runApp()
lluvia_anual_estacion
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?ggplot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?ggplot2
?ggplot
?aes_string
runApp()
runApp()
runApp()
runApp()
?scale_x_discrete
runApp()
runApp()
?classLabel
?labs
runApp()
runApp()
?geom_col
runApp()
runApp()
runApp()
?addMarkers
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dplyr::filter(estaciones,estaciones$estnombre==click$id)[1]$insnombre
runApp()
dplyr::filter(estaciones,estaciones$estnombre=='Panpera')[1]$inspais
runApp()
dplyr::filter(estaciones,estaciones$estnombre=='Melinda')[1]$inspais
dplyr::filter(estaciones,estaciones$estnombre=='Melinda')
dplyr::filter(estaciones,estaciones$estnombre=='Melinda')$inspais
runApp()
runApp()
runApp()
runApp()
?tableOutput
?renderTable
runApp()
runApp()
runApp()
runApp()
runApp()
?select
?rename
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?sliderInput
runApp()
runApp()
# TOTALES MENSUALES
totales_mensuales <- dbGetQuery(con,"select b.estcodigobdcac, b.estnombre, c.inspais, a.diavariable, date_part('year',a.diafecha),
sum(case when date_part('month',a.diafecha) = 1 then a.diavalor else 0 end) as ene,
sum(case when date_part('month',a.diafecha) = 1 then 1 else 0 end) as days_ene,
sum(case when date_part('month',a.diafecha) = 2 then a.diavalor else 0 end) as feb,
sum(case when date_part('month',a.diafecha) = 2 then 1 else 0 end) as days_feb,
sum(case when date_part('month',a.diafecha) = 3 then a.diavalor else 0 end) as mar,
sum(case when date_part('month',a.diafecha) = 3 then 1 else 0 end) as days_mar,
sum(case when date_part('month',a.diafecha) = 4 then a.diavalor else 0 end) as abr,
sum(case when date_part('month',a.diafecha) = 4 then 1 else 0 end) as days_abr,
sum(case when date_part('month',a.diafecha) = 5 then a.diavalor else 0 end) as may,
sum(case when date_part('month',a.diafecha) = 5 then 1 else 0 end) as days_may,
sum(case when date_part('month',a.diafecha) = 6 then a.diavalor else 0 end) as jun,
sum(case when date_part('month',a.diafecha) = 6 then 1 else 0 end) as days_jun,
sum(case when date_part('month',a.diafecha) = 7 then a.diavalor else 0 end) as jul,
sum(case when date_part('month',a.diafecha) = 7 then 1 else 0 end) as days_jul,
sum(case when date_part('month',a.diafecha) = 8 then a.diavalor else 0 end) as ago,
sum(case when date_part('month',a.diafecha) = 8 then 1 else 0 end) as days_ago,
sum(case when date_part('month',a.diafecha) = 9 then a.diavalor else 0 end) as sep,
sum(case when date_part('month',a.diafecha) = 9 then 1 else 0 end) as days_sep,
sum(case when date_part('month',a.diafecha) = 10 then a.diavalor else 0 end) as oct,
sum(case when date_part('month',a.diafecha) = 10 then 1 else 0 end) as days_oct,
sum(case when date_part('month',a.diafecha) = 11 then a.diavalor else 0 end) as nov,
sum(case when date_part('month',a.diafecha) = 11 then 1 else 0 end) as days_nov,
sum(case when date_part('month',a.diafecha) = 9 then a.diavalor else 0 end) as dic,
sum(case when date_part('month',a.diafecha) = 9 then 1 else 0 end) as days_dic
from bdcac.datodia a inner join bdcac.estacion b on a.diaestacion = b.estcodigobdcac
inner join bdcac.institucion c on b.estinstitucion = c.inscodigo
where a.diavariable = 4 and a.diavalor >= 0
group by b.estcodigobdcac, b.estnombre, c.inspais, a.diavariable, date_part('year',a.diafecha)
order by c.inspais, b.estnombre, a.diavariable, date_part('year',a.diafecha)")
library(RPostgreSQL)
library(postGIStools)
setwd('/Users/emartinez/Desktop/Hidroclima/dashboard_bdcac/')
con <- dbConnect(PostgreSQL(), dbname = "bdcac", user = "desarrollador",
host = "localhost", port = "9003",
password = "desbdcac")
# TOTALES MENSUALES
totales_mensuales <- dbGetQuery(con,"select b.estcodigobdcac, b.estnombre, c.inspais, a.diavariable, date_part('year',a.diafecha),
sum(case when date_part('month',a.diafecha) = 1 then a.diavalor else 0 end) as ene,
sum(case when date_part('month',a.diafecha) = 1 then 1 else 0 end) as days_ene,
sum(case when date_part('month',a.diafecha) = 2 then a.diavalor else 0 end) as feb,
sum(case when date_part('month',a.diafecha) = 2 then 1 else 0 end) as days_feb,
sum(case when date_part('month',a.diafecha) = 3 then a.diavalor else 0 end) as mar,
sum(case when date_part('month',a.diafecha) = 3 then 1 else 0 end) as days_mar,
sum(case when date_part('month',a.diafecha) = 4 then a.diavalor else 0 end) as abr,
sum(case when date_part('month',a.diafecha) = 4 then 1 else 0 end) as days_abr,
sum(case when date_part('month',a.diafecha) = 5 then a.diavalor else 0 end) as may,
sum(case when date_part('month',a.diafecha) = 5 then 1 else 0 end) as days_may,
sum(case when date_part('month',a.diafecha) = 6 then a.diavalor else 0 end) as jun,
sum(case when date_part('month',a.diafecha) = 6 then 1 else 0 end) as days_jun,
sum(case when date_part('month',a.diafecha) = 7 then a.diavalor else 0 end) as jul,
sum(case when date_part('month',a.diafecha) = 7 then 1 else 0 end) as days_jul,
sum(case when date_part('month',a.diafecha) = 8 then a.diavalor else 0 end) as ago,
sum(case when date_part('month',a.diafecha) = 8 then 1 else 0 end) as days_ago,
sum(case when date_part('month',a.diafecha) = 9 then a.diavalor else 0 end) as sep,
sum(case when date_part('month',a.diafecha) = 9 then 1 else 0 end) as days_sep,
sum(case when date_part('month',a.diafecha) = 10 then a.diavalor else 0 end) as oct,
sum(case when date_part('month',a.diafecha) = 10 then 1 else 0 end) as days_oct,
sum(case when date_part('month',a.diafecha) = 11 then a.diavalor else 0 end) as nov,
sum(case when date_part('month',a.diafecha) = 11 then 1 else 0 end) as days_nov,
sum(case when date_part('month',a.diafecha) = 9 then a.diavalor else 0 end) as dic,
sum(case when date_part('month',a.diafecha) = 9 then 1 else 0 end) as days_dic
from bdcac.datodia a inner join bdcac.estacion b on a.diaestacion = b.estcodigobdcac
inner join bdcac.institucion c on b.estinstitucion = c.inscodigo
where a.diavariable = 4 and a.diavalor >= 0
group by b.estcodigobdcac, b.estnombre, c.inspais, a.diavariable, date_part('year',a.diafecha)
order by c.inspais, b.estnombre, a.diavariable, date_part('year',a.diafecha)")
View(totales_mensuales)
saveRDS(totales_mensuales,'data/totales_mensuales.rds')
totales_mensuales
min(totales_mensuales$date_part)
min(totales_mensuales$date_part[totales_mensuales$date_part>1900])
max(totales_mensuales$date_part[totales_mensuales$date_part>1900])
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("reshape2")
dplyr::filter(totales_mensuales,totales_mensuales$estnombre=='Melinda' & totales_mensuales$date_part=='2000')
library(reshape2)
melt(dplyr::filter(totales_mensuales,totales_mensuales$estnombre=='Melinda' & totales_mensuales$date_part=='2000'))
melt(dplyr::filter(totales_mensuales,totales_mensuales$estnombre=='Melinda' & totales_mensuales$date_part=='2000') %>% select('ene','feb','mar','abr','may','jun','jul','ago','sep','oct','nov','dic'))
?melt
melt(dplyr::filter(totales_mensuales,totales_mensuales$estnombre=='Melinda' & totales_mensuales$date_part=='2000'),id=c(8,9))
melt(dplyr::filter(totales_mensuales,totales_mensuales$estnombre=='Melinda' & totales_mensuales$date_part=='2000') %>% select('ene','feb','mar','abr','may','jun','jul','ago','sep','oct','nov','dic'))
runApp()
# TOTALES MENSUALES LONG
totales_mensuales_long <- dbGetQuery(con,"select
b.estcodigobdcac, b.estnombre, c.inspais, a.diavariable, date_part('year',a.diafecha) as year, date_part('month',a.diafecha) as month,
sum(a.diavalor) as total,
sum(1) as dias
from
bdcac.datodia a
inner join bdcac.estacion b on a.diaestacion = b.estcodigobdcac
inner join bdcac.institucion c on b.estinstitucion = c.inscodigo
where a.diavariable = 4 and a.diavalor >= 0
group by b.estcodigobdcac, b.estnombre, c.inspais, a.diavariable, date_part('year',a.diafecha), date_part('month',a.diafecha)
order by c.inspais, b.estnombre, a.diavariable, date_part('year',a.diafecha), date_part('month',a.diafecha)")
saveRDS(totales_mensuales_long,'data/totales_mensuales_long.rds')
runApp()
runApp()
dplyr::filter(totales_mensuales_long,totales_mensuales_long'$estnombre=='Melinda' & totales_mensuales_long$year=='1960')
dplyr::filter(totales_mensuales_long,totales_mensuales_long$estnombre=='Melinda' & totales_mensuales_long$year=='1960')
dplyr::filter(totales_mensuales_long,totales_mensuales_long$estnombre=='Melinda' & totales_mensuales_long$year=='1980')
totales_mensuales_long
dplyr::filter(totales_mensuales_long,totales_mensuales_long$estnombre=='Baldy Beacon' & totales_mensuales_long$year=='2012')
runApp()
runApp()
runApp()
totales_mensuales_long
max(dplyr::filter(totales_mensuales_long,totales_mensuales_long$estnombre=='Baldy Beacon')$year)
runApp()
runApp()
runApp()
month.abb
runApp()
?scale_x_discrete
runApp()
runApp()
runApp()
?scale_x_continuous
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
runApp()
rsconnect::setAccountInfo(name='eliseo',
token='FEFB5A8F8A0B09F0EE9EC73FFDB3FEE4',
secret='CaJg/GTLaPGoW2+weuD3ePsI+ZTfMh+5Z/+dwia1')
library(rsconnect)
rsconnect::deployApp('/Users/emartinez/Desktop/Hidroclima/dashboard_bdcac')
runApp()
runApp()
pwd()
cwd()
getwd()
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
readRDS('data/estaciones.rds')
runApp()
runApp()
runApp()
rsconnect::deployApp('/Users/emartinez/Desktop/Hidroclima/dashboard_bdcac')
rsconnect::deployApp('/Users/emartinez/Desktop/Hidroclima/dashboard_bdcac')
rsconnect::deployApp('/Users/emartinez/Desktop/Hidroclima/dashboard_bdcac')
rsconnect::setAccountInfo(name='eliseo',
token='FEFB5A8F8A0B09F0EE9EC73FFDB3FEE4',
secret='CaJg/GTLaPGoW2+weuD3ePsI+ZTfMh+5Z/+dwia1')
rsconnect::deployApp('/Users/emartinez/Desktop/Hidroclima/dashboard_bdcac')
rsconnect::deployApp('/Users/emartinez/Desktop/Hidroclima/dashboard_bdcac')
rsconnect::deployApp('/Users/emartinez/Desktop/Hidroclima/dashboard_bdcac')
